pipeline {
    agent { label 'aws && terraform'}

      environment {
        WORKDIR = "${env.WORKSPACE}/terraform/jenkins-pipeline"
    }

    stages {
         stage('Choose region') {
            steps {
                script {
                    def regionChoice = input(
                        message: 'In ce regiune vrei să provizionezi infrastructura?',
                        ok: 'Continuă',
                        parameters: [
                            choice(name: 'REGION', choices: ['us-east-1', 'us-west-1'], description: 'Alege regiunea AWS')
                        ]
                    )
                    env.TF_VAR_nume_regiune = regionChoice
                    echo "Regiunea AWS aleasa este: ${env.TF_VAR_nume_regiune}"
                }
            }
        }


        stage('Terraform Init') {
            steps {
                dir("${WORKDIR}") {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Validate') {   
            steps {
                dir("${WORKDIR}") {
                    sh 'terraform validate'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir("${WORKDIR}") {
                    sh 'terraform plan -out=tfplan'
                }
            }
        }

        stage('Should apply changes?') {
             steps {
                dir("${WORKDIR}") {
                    script {
                        sh 'cat tfplan'
                        def confirmare = 'Nu' 

                        try {
                            timeout(time: 2, unit: 'MINUTES') {
                                confirmare = input(
                                    message: 'Vrei să aplici modificarile listate?',
                                    ok: 'Continuă',
                                    parameters: [
                                        choice(name: 'CONFIRM', choices: ['Da', 'Nu'], description: 'Selectează o opțiune')
                                    ]
                                )
                            }
                        } catch (err) {
                            echo "Timpul de răspuns a expirat. Se consideră alegerea: Nu"
                        }

                        echo "Alegere finală: ${confirmare}"

                        if (confirmare == 'Da') {
                            env.APPLY_CHANGES = 'true'
                        }
                    }
                }
            }
        }

        stage('Terraform Apply') {
            when {
                expression { return env.APPLY_CHANGES == 'true' }
            }
           
            steps {
                dir("${WORKDIR}") {
                    sh 'terraform apply -auto-approve tfplan'
                }
            }
        }
    }
}